{"__symbolic":"module","version":4,"metadata":{"SketchToolModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule"},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule"}],"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"}],"exports":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵd"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive"},"arguments":[{"selector":"[libCanvasClick]"}]}],"members":{"mouseUp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"mouseDown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"mouseMove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onMouseUp":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["mouseup",["$event"]]}]}],"onMouseDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["mousedown",["$event"]]}]}],"onMouseMouve":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["mousemove",["$event"]]}]}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"lib-web-sketch-tool","template":"<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n\n<div class=\"row\">\n    <div class=\"column\">\n        <form>\n            <button\n                color=\"accent\"\n                (click)=\"crop()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-crop\"></i>\n            </button>\n\n            <button\n                (click)=\"addShape('Rectangle')\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-square\"></i>\n            </button>\n\n            <button\n                (click)=\"addShape('Circle')\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-circle\"></i>\n            </button>\n\n            <button\n                (click)=\"addShape('Line')\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-minus\"></i>\n            </button>\n\n            <button\n                (click)=\"addText()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-font\"></i>\n            </button>\n\n            <button\n                color=\"accent\"\n                (click)=\"bringFoward()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-angle-up\"></i>\n            </button>\n\n            <!-- <input class=\"colorPicker\" [(colorPicker)]=\"strokeColor\" [style.background]=\"strokeColor\" (colorPickerChange)=\"changeStrokeColor()\"\n      /> -->\n\n            <div class=\"separator\"></div>\n\n            <button (click)=\"saveImage()\">\n                <i class=\"fa fa-download\"></i>\n            </button>\n\n        </form>\n    </div>\n\n    <div class=\"column\">\n        <form>\n            <button (click)=\"draw()\">\n                <i class=\"fa fa-pencil\"></i>\n            </button>\n\n            <button\n                (click)=\"addShape('Triangle')\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-caret-up\"></i>\n            </button>\n\n            <button\n                (click)=\"group()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-object-group\"></i>\n            </button>\n\n            <button\n                (click)=\"addShape('Cross')\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-plus\"></i>\n            </button>\n\n            <button\n                (click)=\"deleteSelection()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-trash\"></i>\n            </button>\n\n            <button\n                color=\"accent\"\n                (click)=\"sendToBack()\"\n                [disabled]=\"isDrawing\"\n            >\n                <i class=\"fa fa-angle-down\"></i>\n            </button>\n\n            <!-- <input class=\"colorPicker\" [(colorPicker)]=\"fillColor\" [style.background]=\"fillColor\" (colorPickerChange)=\"changeFillColor()\"\n      /> -->\n\n            <div class=\"separator\"></div>\n\n            <button\n                color=\"accent\"\n                (click)=\"nextImage()\"\n                [disabled]=\"isDrawing || isLastImage\"\n            >\n                <i class=\"fa fa-forward\"></i>\n            </button>\n\n        </form>\n    </div>\n\n    <div\n        class=\"column\"\n        appCanvasDirective\n        (mouseDown)=\"mouseDown($event)\"\n        (mouseMove)=\"mouseMove($event)\"\n        (mouseUp)=\"mouseUp($event)\"\n    >\n        <canvas id=\"canvas\"></canvas>\n\n        <div class=\"pictograms\">\n            <ul>\n                <li\n                    *ngFor=\"let img of pictograms.images\"\n                    (click)=\"addImage(img)\"\n                >\n                    <div class=\"picto\">\n                        <img src=\"{{pictograms.url}}{{img}}\">\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n","styles":[".toolbar-button{font-family:FontAwesome;display:inline-block;width:2em;min-width:0}.colorPicker{width:40px;height:40px;margin:8px auto 0;color:transparent}.column{float:left;width:auto;padding-top:.5em;padding-left:.5em}.row:after{content:\"\";display:table;clear:both}form{display:flex;justify-content:center;flex-direction:column}form button{width:40px;height:40px;margin:8px auto 0}ul{padding:0;margin:0}li{list-style-type:none;overflow:hidden;display:flex;text-decoration:none;float:left;padding:1px}img{width:40px;height:40px;padding:1px;border:1px solid #ddd;border-radius:4px}.pictograms{width:800px;height:25px;padding-top:2px}.separator{padding:10px}i{font-size:1.5em}"],"providers":[{"__symbolic":"reference","name":"ɵc"}]}]}],"members":{"imgUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"addText":[{"__symbolic":"method"}],"addShape":[{"__symbolic":"method"}],"addImage":[{"__symbolic":"method"}],"changeFillColor":[{"__symbolic":"method"}],"changeStrokeColor":[{"__symbolic":"method"}],"bringFoward":[{"__symbolic":"method"}],"sendToBack":[{"__symbolic":"method"}],"draw":[{"__symbolic":"method"}],"saveImage":[{"__symbolic":"method"}],"crop":[{"__symbolic":"method"}],"keyEvent":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:keyup",["$event"]]}]}],"deleteSelection":[{"__symbolic":"method"}],"mouseUp":[{"__symbolic":"method"}],"mouseMove":[{"__symbolic":"method"}],"mouseDown":[{"__symbolic":"method"}],"nextImage":[{"__symbolic":"method"}],"group":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"emptyCanvas":[{"__symbolic":"method"}],"loadNewImage":[{"__symbolic":"method"}],"renderCanvas":[{"__symbolic":"method"}],"addGeometricShape":[{"__symbolic":"method"}],"addRectangle":[{"__symbolic":"method"}],"addCircle":[{"__symbolic":"method"}],"addTriangle":[{"__symbolic":"method"}],"addHorizontalLine":[{"__symbolic":"method"}],"createHorizontalLine":[{"__symbolic":"method"}],"createVerticalLine":[{"__symbolic":"method"}],"addCross":[{"__symbolic":"method"}],"toggleFreeDrawing":[{"__symbolic":"method"}],"setFreeDrawingBrushColor":[{"__symbolic":"method"}],"addText":[{"__symbolic":"method"}],"addImage":[{"__symbolic":"method"}],"setBackgroundFromURL":[{"__symbolic":"method"}],"changeSelectedObjectsFillColor":[{"__symbolic":"method"}],"changeSelectedObjectsStrokeColor":[{"__symbolic":"method"}],"deleteSelectedObjects":[{"__symbolic":"method"}],"bringSelectedObjectsToFront":[{"__symbolic":"method"}],"sendSelectedObjectsToBack":[{"__symbolic":"method"}],"exportImageAsDataURL":[{"__symbolic":"method"}],"selectItem":[{"__symbolic":"method"}],"getIndexOf":[{"__symbolic":"method"}],"jsonFromCanvas":[{"__symbolic":"method"}],"loadfromJson":[{"__symbolic":"method"}],"selectLastObject":[{"__symbolic":"method"}],"markSelectedObjectsDirty":[{"__symbolic":"method"}],"unselectAndReselectObjects":[{"__symbolic":"method"}],"addSelectionRectangle":[{"__symbolic":"method"}],"cropImage":[{"__symbolic":"method"}],"ajustCropRectangle":[{"__symbolic":"method"}],"startSelectingCropRectangle":[{"__symbolic":"method"}],"disableSelection":[{"__symbolic":"method"}],"moveAllObjectsInCanvas":[{"__symbolic":"method"}],"groupSelectedObjects":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"lib-mobile-sketch-tool","template":"<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<div\n    class=\"column\"\n    appCanvasDirective\n    (mouseDown)=\"mouseDown($event)\"\n    (mouseMove)=\"mouseMove($event)\"\n    (mouseUp)=\"mouseUp($event)\"\n>\n    <canvas id=\"canvas\"></canvas>\n\n</div>\n\n<mat-form-field>\n    <mat-select\n        class=\"form-control\"\n        id=\"shape\"\n        <!-- [placeholder]=\"shapePlaceholder\" -->\n    >\n        <mat-option (click)=\"addShape('Rectangle')\">\n            <i class=\"fa fa-square\"></i>\n        </mat-option>\n        <mat-option  (click)=\"addShape('Triangle')\">\n            <i class=\"fa fa-caret-up\"></i>\n        </mat-option>\n        <mat-option (click)=\"addShape('Circle')\">\n            <i class=\"fa fa-circle\"></i>\n        </mat-option>\n        <mat-option (click)=\"addShape('Line')\">\n            <i class=\"fa fa-minus\"></i>\n        </mat-option>\n        <mat-option (click)=\"addShape('Cross')\">\n            <i class=\"fa fa-plus\"></i>\n        </mat-option>\n        <mat-option (click)=\"addText()\">\n            <i class=\"fa fa-font\"></i>\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<mat-form-field>\n    <mat-select <!-- [placeholder]=\"iconPlaceholder\"> -->\n        <mat-option\n            *ngFor=\"let img of pictograms.images\"\n            (click)=\"addImage(img)\"\n        >\n            <img src=\"{{pictograms.url}}{{img}}\">\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<mat-form-field>\n    <mat-select <!-- [placeholder]=\"editPlaceholder\"> -->\n        <mat-option (click)=\"crop()\">\n            <i class=\"fa fa-crop\"></i>\n        </mat-option>\n        <mat-option (click)=\"group()\">\n            <i class=\"fa fa-object-group\"></i>\n        </mat-option>\n        <mat-option (click)=\"bringFoward()\">\n            <i class=\"fa fa-angle-up\"></i>\n        </mat-option>\n        <mat-option (click)=\"sendToBack()\">\n            <i class=\"fa fa-angle-down\"></i>\n        </mat-option>\n        <mat-option (click)=\"deleteSelection()\">\n            <i class=\"fa fa-trash\"></i>\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","styles":[".editBar{background-color:grey;padding:32px}.mat-form-field{width:100px!important}.mat-select-value{max-height:100px!important;align-content:center!important}"],"providers":[{"__symbolic":"reference","name":"ɵc"}]}]}],"members":{"imgUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"addText":[{"__symbolic":"method"}],"addShape":[{"__symbolic":"method"}],"addImage":[{"__symbolic":"method"}],"changeFillColor":[{"__symbolic":"method"}],"changeStrokeColor":[{"__symbolic":"method"}],"bringFoward":[{"__symbolic":"method"}],"sendToBack":[{"__symbolic":"method"}],"draw":[{"__symbolic":"method"}],"saveImage":[{"__symbolic":"method"}],"crop":[{"__symbolic":"method"}],"deleteSelection":[{"__symbolic":"method"}],"mouseUp":[{"__symbolic":"method"}],"mouseMove":[{"__symbolic":"method"}],"mouseDown":[{"__symbolic":"method"}],"nextImage":[{"__symbolic":"method"}],"group":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"lib-test-canvas-click","template":"<input type=\"text\" libCanvasClick (mouseDown)=\"mouseDown($event)\" (mouseMove)=\"mouseMove($event)\" (mouseUp)=\"mouseUp($event)\" >"}]}],"members":{"mouseUp":[{"__symbolic":"method"}],"mouseMove":[{"__symbolic":"method"}],"mouseDown":[{"__symbolic":"method"}]}}},"origins":{"SketchToolModule":"./modules/sketch-tool.module","ɵa":"./directives/canvas-click.directive","ɵb":"./web-component/web-sketch-tool.component","ɵc":"./services/canvas-manager.service","ɵd":"./mobile-component/mobile-sketch-tool.component","ɵe":"./directives/canvas-click.directive.spec"},"importAs":"lib-sketch-tool"}